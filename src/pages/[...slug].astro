---
import { getCollection } from 'astro:content'
import { collections } from '@content/config'
import Base from '@layouts/Base.astro'
import Work from '@composites/Work.astro'
import Backbar from '@layouts/Backbar.astro'
import pathworx from '@scripts/pathworx'
import Child from '@layouts/Child.astro'
import { components } from '@scripts/components'

export async function getStaticPaths() {
	const collections = ['pages', 'work', 'blog'],
		allCollections = await Promise.all(
			collections.map((e) => getCollection(e)),
		).then((results) => results.flat())

	return allCollections.map((e) => ({
		params: { slug: slug(e) },
		props: { e },
	}))

	function slug(path) {
		if (path.collection === 'pages')
			return path.slug === 'home' ? undefined : path.slug
		else return `${path.collection}/${path.slug}`
	}
}

const { e } = Astro.props
const { Content } = await e.render()
const { pathname } = Astro.url
const { isCollection, isCollectionChild, collection, collectionParent } =
	pathworx(Astro.url)
const isTimelines = pathname.startsWith('/timelines')
---

<Base frontmatter={e}>
	{(isCollection() || isCollectionChild()) && !isTimelines && <Backbar />}
	{
		isCollectionChild() ? (
			<Child Content={Content} entry={e} components={components} />
		) : (
			<Content components={components} />
		)
	}
</Base>
