---
import Head from './Head.astro'
import Header from './Header.astro'
import TitleHidden from '@blocks/TitleHidden.astro'
import { _pb } from '@scripts/snips'
import { getImage } from 'astro:assets'

const {
		frontmatter: { data },
	} = Astro.props,
	isHome = Astro.url.pathname === '/'
---

<!doctype html>
<html lang='en' class='scroll-smooth bg-primary-950 text-white/80'>
	<Head
		title={data.title}
		description={data.description}
		image={import.meta.env.SITE + data.cover.src.src}
		alt={data.cover.alt ? data.cover.alt : ''}
	/>
	<body
		class='flex min-h-svh lg:min-h-dvh flex-col transition-colors duration-300'>
		<TitleHidden title={data.title} id="page-title"/>
		<Header />
		<main
			class:list={[
				'swup-in relative',
				!isHome && _pb(),
				isHome &&
					'flex flex-col items-center justify-center h-svh lg:h-dvh -mt-10 lg:-mt-8',
			]}
			id='swup'>
			<slot />
		</main>
	</body>
    <style is:global>
		html.is-changing .swup-in {
			@apply opacity-100 duration-[.3s] ease-[cubic-bezier(0,0.16,0,1)];
		}
		html.is-animating .swup-in {
			@apply translate-y-8 scale-[.99] opacity-0 ease-in;
		}
		.swup-progress-bar {
			@apply h-1 bg-accent-400;
		}
		button {
			text-align: inherit;
		}
		svg {
			@apply pointer-events-none flex-shrink-0 fill-current;
		}
	</style>

	<script>
		import Swup from 'swup'
		import SwupProgressPlugin from '@swup/progress-plugin'
		import SwupHeadPlugin from '@swup/head-plugin'
		import _active from '@scripts/active'
		import _words from '@scripts/words'
		import { _body, _q, _ql } from '@scripts/snips'
		import _zaps from '@scripts/zaps'
		import _backbar from '@scripts/backbar'

		const swup = new Swup({
            containers: ['#swup', '#page-title'],
			animationSelector: '[class*="swup-"]',
			animateHistoryBrowsing: true,
			plugins: [
				new SwupProgressPlugin({ finishAnimation: false }),
				new SwupHeadPlugin(),
			],
		})

		document.addEventListener('DOMContentLoaded', () => {
			once()
			init()
		})
		swup.hooks.on('page:view', () => {
			init()
			_ql('[data-entry]').map((e) => e.classList.remove('invisible'))
		})

		function init() {
			_active()
			_words()
			_backbar()
		}

		function once() {
			_zaps()
		}
	</script>
</html>
